!==============================
!GENERAL PARAMETERS  
!==============================
&parameters
 beta = 0.04 ! Ratio of particle to magnetic pressure (reference Beta, not total beta):  beta=n_0 T_0 /( B^2 / (8 pi))
 zeff = 1.0 ! Effective ionic charge.
/

!==============================
&kt_grids_single_parameters
 aky=0.1
 akx=0.0
 theta0=0.0
/

&theta_grid_parameters
 ntheta=128   ! Number of points along field line (theta) per 2 pi segment
 nperiod=4    ! Number of 2 pi segments along equilibrium magnetic field.
 eps = 0.03   ! eps=r/R
 epsl = 2.0   ! epsl=2 a/R
 shat = 0.2
 pk = 1.6     ! pk = 2 a / q R
 shift=0.15   ! shift = -R q**2 dbeta/drho (>0)
/

!==============================
!  
!==============================
&theta_grid_knobs
 equilibrium_option = "s-alpha" ! Controls which geometric assumptions are used in the run.
/
!==============================
!PITCH ANGLE/ENERGY GRID SETUP  
!==============================
&le_grids_knobs
 ngauss=8 ! Number of untrapped pitch-angles moving in one direction along field line.
 negrid=16 ! Total number of energy grid points
/

!==============================
!BOUNDARY CONDITIONS  
!==============================
&dist_fn_knobs
 gridfac = 1.0 ! Affects boundary condition at end of theta grid.
 omprimfac = 1.0 
 boundary_option = "default" 
 adiabatic_option = "default" 
 g_exb = 0.0 
 nonad_zero = .true. ! If true switches on new parallel boundary condition where h=0 at incoming boundary instead of g=0.
/

!==============================
!ALGORITHMIC CHOICES  
!==============================
&fields_knobs
 field_option = "implicit" ! Controls which time-advance algorithm is used for the linear terms.
/

!==============================
!  
!==============================
&knobs
 fphi = 1.0 ! Multiplies Phi (electrostatic potential).
 fapar = 1.0 ! Multiplies A_par. Use 1 for finite beta (electromagnetic), 0 otherwise (electrostatic)
 faperp = 0.0 ! Multiplies A_perp. Use 1 for high beta, 0 otherwise. Deprecated: use fbpar instead
 delt=0.01 ! Time step
 nstep=10000 ! Maximum number of timesteps
/

!==============================
&layouts_knobs
 layout = "yxles" ! 'yxles', 'lxyes', 'lyxes', 'lexys' Determines the way the grids are laid out in memory.
/

!==============================
!COLLISIONS  
!==============================
&collisions_knobs
 collision_model = "default" ! Collision model used in the simulation. Options: 'default', 'none', 'lorentz', 'ediffuse'
/

!==============================
!NONLINEARITY  
!==============================
&nonlinear_terms_knobs
 nonlinear_mode = "off"
/

!==============================
!EVOLVED SPECIES  
!==============================
&species_knobs
 nspec = 2 ! Number of kinetic species evolved.
/

!==============================
!SPECIES PARAMETERS 1 
!==============================
&species_parameters_1
 z = 1.0 ! Charge
 mass = 1.0 ! Mass
 dens = 1.0 ! Density	
 temp = 1.0 ! Temperature
 fprim=  1.0 ! -1/n (dn/drho)
 tprim = 2.0 ! -1/T (dT/drho)
 uprim = 0.0 ! 
 vnewk=0.001 ! collisionality parameter
 type = "ion" ! Type of species, e.g. 'ion', 'electron', 'beam'
/
&species_parameters_2
 z = -1.0 ! Charge
 mass = 0.0002724 ! Mass
 dens = 1.0 ! Density	
 temp = 1.0 ! Temperature
 fprim = 1.0 ! -1/n (dn/drho)
 tprim = 2.0 ! -1/T (dT/drho)
 uprim = 0.0 ! ?
 vnewk=0.06 ! collisionality parameter
 type = "electron" ! Type of species, e.g. 'ion', 'electron', 'beam'
/

&dist_fn_species_knobs_1
 fexpr=0.0 
 bakdif = 0.0 
/

&dist_fn_species_knobs_2
 fexpr=0.0 
 bakdif = 0.0 
/

!==============================
!INITIAL CONDITIONS  
!==============================
&init_g_knobs
 chop_side = .false. ! Rarely needed. Forces asymmetry into initial condition.
 phiinit = 0.001 ! Average amplitude of initial perturbation of each Fourier mode.
 restart_file = "ml01.nc" ! Base of filenames with restart data.
 ginit_option = "noise" ! Sets the way that the distribution function is initialized.
 restart_dir = "nc"
/

!==============================
!DIAGNOSTICS  
!==============================
&gs2_diagnostics_knobs
 print_flux_line = .false. ! Instantaneous fluxes output to screen
 write_nl_flux = .false. ! Write nonlinear fluxes as a function of time.
 print_line = .true. ! Estimated frequencies and growth rates to the screen/stdout
 write_verr = .false. ! Write velocity space diagnostics to '.lpc' and '.verr' files
 write_line = .true. ! If (write_ascii = T) write estimated frequencies and growth rates to the output file
 write_hrate = .false. ! Write heating rate, collisonal entropy generation etc to '.heat'
 write_avg_moments = .F. 
 write_omega = .true. ! If (write_ascii = T) instantaneous omega to output file. Very heavy output
 write_omavg = .true. ! If (write_ascii = T) time-averaged growth rate and frequency to the output file.
 write_eigenfunc = .true. ! If (write_ascii = T) Normalized phi written to runname.eigenfunc
 write_final_fields = .true. ! If (write_ascii = T) Phi(theta) written to '.fields'
 write_final_moments = .true. ! write final n, T
  ! write_parity not specified --- Writes parities in dist fn and particle fluxes
 nwrite = 10 ! Output diagnostic data every nwrite
 navg = 50   ! Any time averages performed over navg
 omegatol=0.001 ! The convergence has to be better than one part in 1/omegatol
 omegatinst = 500.0 ! Recommended value: 500.
 save_for_restart = .true. ! Write restart files.
 write_ascii = .true.
 write_fields = .false.
 write_phi_over_time = .false. ! Write entire Phi field to NetCDF file every nwrite.
/
